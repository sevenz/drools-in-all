package com.bob.rules.reguralrule

import com.bob.rules.reguralrule.model.Fire
import com.bob.rules.reguralrule.model.Sprinkler
import com.bob.rules.reguralrule.model.Room
import com.bob.rules.reguralrule.model.Alarm

dialect  "mvel"

rule "When there is a fire turn on the sprinkler"
    when
        Fire($room: room)
        $sprinkler : Sprinkler( room == $room, on == false )
    then
        modify( $sprinkler) { setOn(true) }
        System.out.println("turn on the sprinkler for romm " + $room.getName());
end

rule "when the fire is gone turn off the sprinkler"
    when
        $room: Room($name: name)
        $sprinkler: Sprinkler(room == $room, on == true)
        not Fire(room == $room)
    then
        modify ($sprinkler) { setOn(false)}
        System.out.println("turn off the sprinkler for romm " + $room.getName());
end

rule "Raise the alarm when we have one or more fires"
when
    exists Fire()
then
    insert( new Alarm() );
    System.out.println( "Raise the alarm" );
end

rule "Cancel the alarm when all the fires have gone"
when
    not Fire()
    $alarm : Alarm()
then
    delete( $alarm );
    System.out.println( "Cancel the alarm" );
end

rule "Status output when things are ok"
when
    not Alarm()
    not Sprinkler( on == true )
then
    System.out.println( "Everything is ok" );
end